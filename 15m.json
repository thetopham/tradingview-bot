{
  "name": "15m",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "694cc668-54e1-4b18-94e7-51a381764295",
              "name": "response",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {
          "includeBinary": true
        }
      },
      "id": "d7ee7495-0b08-48e6-bc84-86e3e0a0ca94",
      "name": "Set 'response' value",
      "type": "n8n-nodes-base.set",
      "position": [
        1168,
        64
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.chart-img.com/v2/tradingview/layout-chart/storage/1LucwVmQ",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "tradingview-session-id",
              "value": "evm7y2hq9bq02v90hqp5i49ebh0wp9oi"
            },
            {
              "name": "tradingview-session-id-sign",
              "value": "v3:/v1bB08jupQzyOcA7spvXbHLyoLUfVyo5U7WaFa+u3g="
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "format",
              "value": "jpeg"
            },
            {
              "name": "interval",
              "value": "15m"
            },
            {
              "name": "width",
              "value": "1920"
            },
            {
              "name": "height",
              "value": "1080"
            }
          ]
        },
        "options": {}
      },
      "id": "cb37eedc-2961-4147-b3db-adecffeab1d0",
      "name": "Tradingview Chart",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        592,
        64
      ],
      "typeVersion": 4.2,
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "ZleHrixI7F5TA8Yb",
          "name": "chart-img"
        }
      }
    },
    {
      "parameters": {
        "content": "## Start here: Step-by Step Youtube Tutorial :star:\n\n[![Technical Analyst AI Agent using LLM Vision](https://img.youtube.com/vi/yjBHheCB6Ek/sddefault.jpg)](https://youtu.be/yjBHheCB6Ek)\n",
        "height": 550,
        "width": 507,
        "color": 7
      },
      "id": "012e941f-ab06-4201-8a7f-0e8ded0afef7",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -640,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        928,
        64
      ],
      "id": "4242ef46-516a-4033-b09b-c8f75fe1d3be",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "15m",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        64
      ],
      "id": "e4259c91-3bd0-445d-92c9-9a8c8684abe2",
      "name": "Webhook",
      "webhookId": "5c793395-f218-4a49-a620-51d297f2dbfb"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        32,
        272
      ],
      "id": "e0a378f3-f789-4f8e-8267-d72fa309fefa",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        -144
      ],
      "id": "493e1a07-716b-4012-b780-537a83876bdd",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert day trading analyst for the Micro E-mini S&P 500 (MES).\n\nAnalyze the attached chart image for the 15m timeframe using a DUAL PERSPECTIVE approach.\n\nCRITICAL INSTRUCTION: Different aspects require different time windows:\n- Trend Direction: Focus on the LAST 8-10 candles (rightmost 20% of chart)\n- Support/Resistance: Use ENTIRE visible chart\n- Momentum: Last 5-6 candles\n- Trade Signals: Last 3-4 candles\n\nStep 1: Market Regime & Trend Assessment (RECENT ACTION FOCUS)\n- FOR TREND DIRECTION, analyze ONLY the last 8-10 candles:\n  - If price range of last 8 candles < 0.15% of current price = SIDEWAYS\n  - If price range of last 8 candles < 10 points = SIDEWAYS\n  - Recent action OVERRIDES historical trend patterns\n  \n- Classify the current market regime based on RECENT action:\n  - strong_trend: RECENT candles making clear higher highs/lows or lower highs/lows\n  - weak_trend: RECENT trend losing momentum, deeper pullbacks in last few bars\n  - range: RECENT price bouncing between levels, no directional progress\n  - breakout: RECENT expansion beyond prior range (last 3-5 candles)\n\n- Trend direction rules:\n  - up: ONLY if last 8 candles show higher highs AND higher lows\n  - down: ONLY if last 8 candles show lower highs AND lower lows  \n  - sideways: If last 8 candles are contained within a tight range OR no clear direction\n\nStep 2: Signal Generation (Based on RECENT Regime)\n- Strong trend: Trade WITH recent momentum on pullbacks\n- Weak/mature trend: Watch for exhaustion in recent candles\n- Range/chop: Fade extremes ONLY if recent action confirms\n- Breakout: Confirm with last 2-3 candles before signaling\n- If last 5+ candles show no directional progress = HOLD\n\nStep 3: Extract Data (Full Chart for Levels, Recent for Trends)\n- Support/Resistance: Use ENTIRE chart to identify major levels\n- Entry/Stop/Targets: Based on visible structure from full chart\n- Current price, recent high/low: From last 10 candles\n- Momentum: Based on last 5-6 candles ONLY\n- Range calculations: Use recent range (last 10 candles) vs daily range\n- Indicators: Current values but consider recent changes\n- Volume trend: Focus on last 5-8 bars\n\nStep 4: Context & Analysis\n- Price action summary: Emphasize what's happening NOW vs earlier\n- Signal explanation: \"Recent action shows X, despite earlier trend of Y\"\n- Risk factors: Include \"trend may be stalling\" if recent != historical\n- Distinguish between structural trend and current behavior\n\nIMPORTANT DISTINCTIONS:\n- A chart can have an UPTREND STRUCTURE but CURRENT SIDEWAYS ACTION\n- Recent sideways action = sideways trend, regardless of daily trend\n- Don't let historical price movement override current market behavior\n- If unsure between trending and sideways, default to sideways\n\nFormatting Rules:\n- Valid JSON only, no markdown\n- Use null for non-visible data\n- Be specific about timeframe references\n\nJSON Output:\n{\n  \"timeframe\": \"15m\",\n  \"market_regime\": \"strong_trend|weak_trend|range|breakout\",\n  \"trend_direction\": \"up|down|sideways\",\n  \"trend_strength\": \"strong|moderate|weak|exhausted\",\n  \"structural_bias\": \"bullish|bearish|neutral\",\n  \"recent_action\": \"trending|consolidating|reversing\",\n  \"signal\": \"BUY|SELL|HOLD\",\n  \"signal_type\": \"trend_continuation|reversal|range_fade|breakout\",\n  \"signal_confidence\": \"high|medium|low\",\n  \"entrylimit\": <float|null>,\n  \"tp1\": <float|null>,\n  \"tp2\": <float|null>,\n  \"tp3\": <float|null>,\n  \"sl\": <float|null>,\n  \"support\": [<float|null>, <float|null>, <float|null>],\n  \"resistance\": [<float|null>, <float|null>, <float|null>],\n  \"trade_location\": \"pullback|breakout|extreme|middle\",\n  \"current_price\": <float|null>,\n  \"recent_high\": <float|null>,\n  \"recent_low\": <float|null>,\n  \"recent_range\": <float|null>,\n  \"percent_of_range\": <float 0-100|null>,\n  \"momentum\": \"accelerating|steady|decelerating|flat\",\n  \"momentum_alignment\": \"with_trend|against_trend|neutral|not_shown\",\n  \"volatility\": \"high|medium|low|not_shown\",\n  \"range_size\": <float|null>,\n  \"indicators\": {\n    \"ATR_crayon\": \"bullish|bearish|neutral|not_shown\",\n    \"FSVZO\": \"above_zero|below_zero|neutral|not_shown\",\n    \"Phobos\": \"positive_momentum|negative_momentum|neutral|not_shown\",\n    \"Fisher\": \"bullish_divergence|bearish_divergence|neutral|not_shown\"\n  },\n  \"candle_pattern\": \"hammer|doji|engulfing|none|not_shown\",\n  \"volume_trend\": \"increasing|decreasing|flat|not_shown\",\n  \"price_action_summary\": \"<1-2 sentences focusing on RECENT action>\",\n  \"setup_detected\": \"<pattern|none|not_shown>\",\n  \"reason\": \"<explain signal based on RECENT action, note if differs from structural trend>\",\n  \"risk_factors\": [\"<what could invalidate this signal>\"],\n  \"trend_conflict\": \"<note if recent trend differs from structural trend>\",\n  \"chart_time\": \"{{ $now }}\",\n  \"url\": \"{{ $json.response }}\"\n}",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "messageType": "imageBinary"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1408,
        64
      ],
      "id": "b6b9125e-cae9-4be5-8428-95e9dd883476",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-chat-latest",
          "mode": "list",
          "cachedResultName": "gpt-5-chat-latest"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1344,
        304
      ],
      "id": "63fce656-98b1-48be-89ab-5c099939a232",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "hOvrgCZvpztkucKb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        2144,
        -16
      ],
      "id": "f2bc1310-3638-4e78-b3db-c1a7bd32774f",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "tableId": "chart_analysis",
        "dataToSend": "autoMapInputData"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2160,
        144
      ],
      "id": "722dfaff-e2e6-47a5-a314-cd668a2f17fe",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "id8sHbOkjIgqTd0J",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let raw = $input.first().json.text;\n\n// Strip code block markers, leading/trailing quotes, and whitespace\nraw = raw.trim()\n    .replace(/^```json\\s*/i, '')\n    .replace(/^```\\s*/i, '')\n    .replace(/```$/i, '')\n    .replace(/^'|'$/g, '');\n\nreturn [ JSON.parse(raw) ];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1808,
        64
      ],
      "id": "3101e872-4103-4a66-ab78-40c9923f8cb4",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "latest_chart_analysis",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "symbol",
              "condition": "eq",
              "keyValue": "MES"
            },
            {
              "keyName": "timeframe",
              "condition": "eq",
              "keyValue": "={{ $json.timeframe }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "snapshot",
              "fieldValue": "={{ $json }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ $json.chart_time }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2192,
        352
      ],
      "id": "f8c3a2c0-e2d7-4af3-aefb-70265bef76c8",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "id8sHbOkjIgqTd0J",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2160,
        544
      ],
      "id": "af7cd05d-fe84-4cb1-884e-39565c7267e7",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "connections": {
    "Tradingview Chart": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Set 'response' value",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Tradingview Chart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'response' value": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Tradingview Chart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Tradingview Chart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "80986523-9e6b-4d3c-a234-2f202bce9e84",
  "meta": {
    "instanceId": "9783a33f8d5600da0ff08d35d1dc9051c104e0a37fceb74a2ffe1557dcda02bc"
  },
  "id": "DKUSLysNqZjX9PA5",
  "tags": []
}