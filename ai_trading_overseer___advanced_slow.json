{
  "name": "ai trading overseer - advanced slow",
  "nodes": [
    {
      "parameters": {
        "content": "## Start here: Step-by Step Youtube Tutorial :star:\n\n[![Technical Analyst AI Agent using LLM Vision](https://img.youtube.com/vi/yjBHheCB6Ek/sddefault.jpg)](https://youtu.be/yjBHheCB6Ek)\n",
        "height": 550,
        "width": 507,
        "color": 7
      },
      "id": "958982e0-c63a-4927-9d1f-eda677989faa",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        140,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5c793395-f218-4a49-a620-51d297f2dbfb",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1000,
        360
      ],
      "id": "c6e63068-d807-40c3-b1d9-64502f60b566",
      "name": "Webhook",
      "webhookId": "5c793395-f218-4a49-a620-51d297f2dbfb"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"strategy\": \"brackmod\",\n  \"signal\": \"{{ $('Code').item.json.signal }}\",\n  \"timestamp\": \"{{ $('Code').item.json.timestamp }}\",\n  \"symbol\": \"{{ $('Code').item.json.symbol }}\",\n  \"account\": \"{{ $('Code').item.json.account }}\",\n  \"size\": {{ $('Code').item.json.size }},\n  \"ai_decision_id\": \"{{ $json.ai_decision_id }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        2920,
        180
      ],
      "id": "f89a2afa-400c-4bd2-bed3-ebf2aa1989da",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Today is {{ $now }}.\n\nYou are the lead day trading analyst for the Micro E-mini S&P 500 (MES).\n\nYou have received structured chart analysis reports from multiple timeframes (tools available: 1m, 5m, 15m, 30m, 1h, 4h, 6h, 1D, 1W, 1M). Each report contains a trade signal (BUY, SELL, HOLD), trend, and rationale, referencing chart features and indicators.\n\n**Indicators referenced:**\n- ATR Crayon Candles: Green = bullish, Red = bearish\n- FSVZO\n- Phobos momentum\n- Fisher: Red H/R = hidden/regular bearish divergence; Green H/R = hidden/regular bullish divergence\n\n**Task:**  \nBased **only** on the analyst reports provided for each timeframe, determine the best overall trade signal for MES using the brackmod strategy.  \n- Your decision must be based on the confluence of signals, trends, and rationales from the timeframes.\n- Provide a concise reason referencing the most relevant timeframes and indicator evidence.\n\n**Respond with valid JSON only** (no extra text, no triple backticks):\n\n{\n  \"strategy\": \"brackmod\",\n  \"signal\": \"BUY|SELL|HOLD\",\n  \"alert\": \"{{ $json.body.alert }}\",\n  \"timestamp\": \"{{ $now }}\",\n  \"entrylimit\": <float>,\n  \"tp1\": <float>,\n  \"tp2\": <float>,\n  \"tp3\": <float>,\n  \"sl\": <float>,\n  \"symbol\": \"CON.F.US.MES.M25\",\n  \"account\": \"{{ $json.body.account }}\",\n  \"size\": 3,\n  \"reason\": \"<Concise justification referencing the most important timeframes and indicator signals>\",\n  \"trend\": {\n    \"5m\": \"<up|down|sideways|unknown>\",\n    \"15m\": \"<up|down|sideways|unknown>\",\n    \"1h\": \"<up|down|sideways|unknown>\"\n  },\n  \"urls\": {\n    \"5m\": \"<5m chart URL>\",\n    \"15m\": \"<15m chart URL>\",\n    \"1h\": \"<1h chart URL>\"\n  }\n}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1620,
        360
      ],
      "id": "7d85dcad-a3b2-41bb-b796-59da100ce19f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1160,
        820
      ],
      "id": "71ab7622-50e7-44e8-bec3-c21a9036eab7",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "hOvrgCZvpztkucKb",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "7g4qjNktNsBh7U9Q",
          "mode": "list",
          "cachedResultName": "5m"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1380,
        820
      ],
      "id": "599e7c39-df3d-4213-90b9-dc2a03c71914",
      "name": "5m"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "rxR7U0MjxtZBOjwm",
          "mode": "list",
          "cachedResultName": "1h"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1680,
        820
      ],
      "id": "55f7479f-067b-4c40-b5d8-68a3d018ceb1",
      "name": "1h"
    },
    {
      "parameters": {
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2320,
        820
      ],
      "id": "b44fb7eb-8fb3-4ea1-86bd-f82dc08e8539",
      "name": "HTTP Request1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1000,
        540
      ],
      "id": "4dbe96dc-5b1f-43b7-b1f4-8e481f02b866",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "KWlHcm2igwb0181Y",
          "mode": "list",
          "cachedResultName": "30m"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1580,
        820
      ],
      "id": "0681e2d1-b4e0-459c-836b-4798199772d2",
      "name": "30m"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "BKwZ2BR9J6CjMVDk",
          "mode": "list",
          "cachedResultName": "1m"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1280,
        820
      ],
      "id": "c1c29dd4-df7c-412d-8c92-3f264f36a6ab",
      "name": "1m"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "qDAGcWgNvxcmmxrt",
          "mode": "list",
          "cachedResultName": "4h"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1780,
        820
      ],
      "id": "2638b91b-16ae-4455-935a-8c3a58aeb4a4",
      "name": "4h"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "VPdU5qkivv5rB2Y0",
          "mode": "list",
          "cachedResultName": "6h"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1900,
        820
      ],
      "id": "2e93f870-56f7-47a0-866d-e326d82b5473",
      "name": "6h"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "9nwRDbDa2ShB5VRQ",
          "mode": "list",
          "cachedResultName": "1D"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2000,
        820
      ],
      "id": "65f0c789-d788-4979-a907-9f16d96b36fa",
      "name": "1D"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "i1Py6o2O0bH0utaH",
          "mode": "list",
          "cachedResultName": "1W"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2100,
        820
      ],
      "id": "db80fc7d-a6d9-40a7-acf8-54a066c7c1e6",
      "name": "1W"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "eYN3ktA56GoLxPfU",
          "mode": "list",
          "cachedResultName": "1M"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2200,
        820
      ],
      "id": "8a602da7-d46e-4be5-bd3d-9527c2d0c0cb",
      "name": "1M"
    },
    {
      "parameters": {
        "tableId": "ai_trading_log",
        "dataToSend": "autoMapInputData"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2440,
        180
      ],
      "id": "38b120b7-e069-46ce-be3b-12cbb9bcfd7d",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "id8sHbOkjIgqTd0J",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [ JSON.parse($input.first().json.output) ];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2160,
        180
      ],
      "id": "9552e115-39a4-40b5-89bc-c7d8789f08b9",
      "name": "Code"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1000,
        160
      ],
      "id": "7175017c-5db1-44f8-ba90-2dc8cec1bd73",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d733105-b0e5-4590-ba13-b908adce16f5",
              "name": "ai_decision_id",
              "value": "={{ $json.ai_decision_id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2700,
        180
      ],
      "id": "361e00ff-17c1-49bf-81db-a4eca20f0e6e",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-preview-05-06",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        980,
        1100
      ],
      "id": "2ef0dfb4-a850-4a59-9be2-d2ed99cf1f87",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "SxnFAWOfVBPKSwq9",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-3-7-sonnet-20250219",
          "cachedResultName": "Claude 3.7 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1120,
        1100
      ],
      "id": "f553b4e3-1e96-43dd-b003-d316d5ab644c",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "SYGdKwRCUXN1yoB4",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "DKUSLysNqZjX9PA5",
          "mode": "list",
          "cachedResultName": "15m"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1480,
        820
      ],
      "id": "205deff6-d9bc-44f9-bb45-0f76dfe937a8",
      "name": "15m"
    },
    {
      "parameters": {
        "resource": "object",
        "operation": "create",
        "bucketName": "tradingview-chart",
        "objectName": "=charts/{{ $json.id }}/{{ $json.timeframe }}.jpg",
        "createData": {},
        "createQuery": {},
        "encryptionHeaders": {},
        "requestOptions": {}
      },
      "name": "Upload to GCS",
      "type": "n8n-nodes-base.googleCloudStorage",
      "typeVersion": 1,
      "position": [
        3440,
        460
      ],
      "id": "933c1e6f-0248-4095-b5e3-b17edc679b97",
      "retryOnFail": true,
      "credentials": {
        "googleCloudStorageOAuth2Api": {
          "id": "kT6LnTnLCRqZwDOj",
          "name": "Google Cloud Storage account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e0d240b7-b268-482c-991f-095f2a8d02fd",
              "name": "urls['1m']",
              "value": "={{ $json.urls['1m'] }}",
              "type": "string"
            },
            {
              "id": "4147d304-bbd3-449e-93aa-f04536862b9b",
              "name": "urls['5m']",
              "value": "={{ $json.urls['5m'] }}",
              "type": "string"
            },
            {
              "id": "ab9f8eed-00fa-4df8-a04e-6d2925a67f27",
              "name": "urls['15m']",
              "value": "={{ $json.urls['15m'] }}",
              "type": "string"
            },
            {
              "id": "af6b2387-5097-40cb-8418-69a3fa536eb8",
              "name": "urls['30m']",
              "value": "={{ $json.urls['30m'] }}",
              "type": "string"
            },
            {
              "id": "23f0fae8-29d8-4a71-a31d-b2348c729b6f",
              "name": "urls['1h']",
              "value": "={{ $json.urls['1h'] }}",
              "type": "string"
            },
            {
              "id": "248d85d5-3bdc-4ecd-bb40-6bf25046d7c4",
              "name": "urls['4h']",
              "value": "={{ $json.urls['4h'] }}",
              "type": "string"
            },
            {
              "id": "f8dc95a6-072c-4da8-a8b2-093dcb631114",
              "name": "=urls['6h']",
              "value": "={{ $json.urls['6h'] }}",
              "type": "string"
            },
            {
              "id": "bb86568b-ad6e-418a-80aa-ad7a4cafbd71",
              "name": "urls['1D']",
              "value": "={{ $json.urls['1D'] }}",
              "type": "string"
            },
            {
              "id": "44e9d891-3d63-49e0-a00c-ddcf37f53493",
              "name": "urls['1W']",
              "value": "={{ $json.urls['1W'] }}",
              "type": "string"
            },
            {
              "id": "69c1823d-a907-4a16-a655-cc70d516dc1f",
              "name": "urls['1M']",
              "value": "={{ $json.urls['1M'] }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        480
      ],
      "id": "2bdc5eca-8af8-4733-a913-fa5099c7d972",
      "name": "Edit Fields1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        2760,
        460
      ],
      "id": "ff7164a6-5575-4cf2-8b52-2fd3c3f100d0",
      "name": "Merge"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3200,
        460
      ],
      "id": "593fd1dd-37f2-4bfa-abb9-cb16f4b44a1d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Handles both object and possible stringified JSON (defensive!)\nlet urls = $json.urls;\nif (typeof urls === 'string') {\n  urls = JSON.parse(urls);\n}\n\nconst id = $json.ai_decision_id || $json.timestamp || 'unknown_id';\nconst out = [];\nfor (const tf in urls) {\n  const url = urls[tf];\n  if (typeof url === \"string\" && url.startsWith(\"http\")) {\n    out.push({\n      json: {\n        timeframe: tf,\n        url,\n        id\n      }\n    });\n  }\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2960,
        460
      ],
      "id": "3fb7407c-7cf0-42d1-b00e-b5bb02cb572a",
      "name": "Code1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27b01d5c-b00a-4266-b6aa-ae9a2472d2db",
              "name": "url",
              "value": "=https://storage.googleapis.com/tradingview-chart/charts/{{ $('Code1').item.json.id }}/{{ $('Code1').item.json.timeframe }}.jpg",
              "type": "string"
            },
            {
              "id": "6d0b4721-0211-4acb-9d58-882bd7bfe0a8",
              "name": "timeframe",
              "value": "={{ $('HTTP Request').item.json.timeframe }}",
              "type": "string"
            },
            {
              "id": "45c55a40-6d76-4234-9217-b249ec4d4656",
              "name": "id",
              "value": "={{ $('Code1').item.json.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3640,
        460
      ],
      "id": "5e2c4f5e-7cd3-457e-84cd-2a8ba7a67813",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "jsCode": "const out = {};\nfor (const item of items) {\n  // Use the actual field names\n  out[item.json.timeframe] = item.json.url;\n}\nreturn [\n  {\n    json: {\n      id: items[0].json.id,\n      urls: out\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3820,
        460
      ],
      "id": "722d306f-8abe-4986-ad23-e9457b7f5c85",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "ai_trading_log",
        "filterType": "string",
        "filterString": "=ai_decision_id=eq.{{ $json.id }}\n",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "urls",
              "fieldValue": "={{ JSON.stringify($json.urls) }}\n"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4040,
        460
      ],
      "id": "291bd60d-94b0-4218-9482-12f34185d6ff",
      "name": "Supabase1",
      "retryOnFail": true,
      "credentials": {
        "supabaseApi": {
          "id": "id8sHbOkjIgqTd0J",
          "name": "Supabase account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "5m": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "1h": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "30m": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "1m": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "4h": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "6h": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "1D": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "1W": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "1M": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "15m": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Upload to GCS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to GCS": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v1"
  },
  "versionId": "4fa7ee33-dccf-4a25-b2ae-21d2dc27a4c2",
  "meta": {
    "templateId": "2569",
    "templateCredsSetupCompleted": true,
    "instanceId": "9783a33f8d5600da0ff08d35d1dc9051c104e0a37fceb74a2ffe1557dcda02bc"
  },
  "id": "Gn0m54Noac1vvmqN",
  "tags": []
}
